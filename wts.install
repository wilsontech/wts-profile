<?php

/**
 * @file
 * Install, update and uninstall functions for the Linux Journal installation
 * profile.
 */

/**
 * Implements hook_install().
 *
 * Run the hook_install() function from the minimal profile as part of this
 * profile.
 */
function wts_install() {
  // Utilise the hook_install() implementation from the minimal profile.
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  minimal_install();

  // Enable the administration theme.
  $admin_theme = 'seven';
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');

  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  $raw_html_format = array(
    'format' => 'raw_html',
    'name' => 'Raw HTML',
    'weight' => 2,
  );
  $raw_html_format = (object) $raw_html_format;
  filter_format_save($raw_html_format);

  // Add a 'Basic page' content type.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    )
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Default 'Basic page' to not be promoted and don't display author
  // information.
  variable_set('node_options_page', array('status'));
  variable_set('node_submitted_page', FALSE);

  // Add the TinyMCE editor to the Filtered HTML text format.
  $tinymce_settings = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 0,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' => array(
      'default' => array(
        'bold' => 1,
        'italic' => 1,
        'strikethrough' => 1,
        'justifyleft' => 1,
        'justifycenter' => 1,
        'justifyright' => 1,
        'justifyfull' => 1,
        'bulllist' => 1,
        'numlist' => 1,
        'link' => 1,
        'unlink' => 1,
        'anchor' => 1,
        'image' => 1,
        'formatselect' => 1,
        'sup' => 1,
        'sub' => 1,
        'blockquote' => 1,
        'code' => 1,
        'hr' => 1,
        'removeformat' => 1,
        'charmap' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 1,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

// TO DO
// find right settings for ckeditor.
// till then, manually edit from admin/config/content/wysiwyg
  $filtered_html_wysiwyg = array(
    'default' => 1,
    'user_choose' => 0,
    'show_toggle' => 1,
    'theme' => 'advanced',
    'language' => 'en',
    'buttons' =>
    array (
      'default' =>
        array (
          'Bold' => 1,
          'Italic' => 1,
          'Underline' => 1,
          'Strike' => 1,
          'JustifyLeft' => 1,
          'JustifyCenter' => 1,
          'JustifyRight' => 1,
          'JustifyBlock' => 1,
          'BulletedList' => 1,
          'NumberedList' => 1,
          'Outdent' => 0,
          'Indent' => 1,
          'Undo' => 1,
          'Redo' => 1,
          'Link' => 1,
          'Unlink' => 1,
          'Anchor' => 1,
          'Image' => 1,
          'TextColor' => 1,
          'BGColor' => 1,
          'Superscript' => 1,
          'Subscript' => 1,
          'Blockquote' => 1,
          'Source' => 1,
          'HorizontalRule' => 1,
          'Cut' => 1,
          'Copy' => 1,
          'Paste' => 1,
          'PasteText' => 1,
          'PasteFromWord' => 1,
          'ShowBlocks' => 0,
          'RemoveFormat' => 1,
          'SpecialChar' => 1,
          'Format' => 1,
          'Font' => 0,
          'FontSize' => 1,
          'Styles' => 1,
          'Table' => 1,
          'SelectAll' => 1,
          'Find' => 1,
          'Replace' => 1,
          'Flash' => 0,
          'Smiley' => 0,
          'CreateDiv' => 1,
          'Iframe' => 0,
          'Maximize' => 0,
          'SpellChecker' => 1,
          'Scayt' => 1,
          'About' => 0,
        ),
      'drupal' =>
        array (
        'break' => 1,
      ),
    ),
    'toolbar_loc' => 'top',
    'toolbar_align' => 'left',
    'path_loc' => 'bottom',
    'resizing' => 1,
    'verify_html' => 1,
    'preformatted' => 0,
    'convert_fonts_to_spans' => 1,
    'remove_linebreaks' => 1,
    'apply_source_formatting' => 0,
    'paste_auto_cleanup_on_paste' => 0,
    'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
    'css_setting' => 'theme',
    'css_path' => '',
    'css_classes' => '',
  );

  $record = array(
    'format' => 'filtered_html',
    // 'editor' => 'tinymce',
    'editor' => 'ckeditor',
    'settings' => $filtered_html_wysiwyg,
  );

  drupal_write_record('wysiwyg', $record);

  // Create new user roles for Developers, Administrators, Editors and Publishers.
  $roles = array('Developer', 'Administrator', 'Editor', 'Publisher');
  foreach ($roles as $weight => $name) {
    $role = new stdClass;
    $role->name = $name;
    $role->weight = $weight + 2; // New roles must have at least a weight of 2.

    // Save the new role.
    user_role_save($role);

    if ($name == 'Developer') {
      // Give the Developer role all permissions.
      user_role_grant_permissions($role->rid, array_keys(module_invoke_all('permission')));

      // Set this as the administrator role.
      variable_set('user_admin_role', $role->rid);

      // Assign user 1 the Developer role.
      db_insert('users_roles')
        ->fields(array('uid' => 1, 'rid' => $role->rid))
        ->execute();
    }
  }

  // Assign some default permissions.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  $raw_html_permission = filter_permission_name($raw_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access administration menu', 'access devel information', $filtered_html_permission, $raw_html_permission));
}
